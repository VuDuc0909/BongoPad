#include <Adafruit_SH110X.h>
#include <Adafruit_NeoPixel.h>
#include <RotaryEncoder.h>
#include <Wire.h>
#include "Adafruit_NeoKey_1x4.h"
#include "seesaw_neopixel.h"
#include "Keyboard.h"

Adafruit_NeoKey_1x4 neokey;

// Create the OLED display
Adafruit_SH1106G display = Adafruit_SH1106G(128, 64, &SPI1, OLED_DC, OLED_RST, OLED_CS);

// Create the neopixel strip with the built in definitions NUM_NEOPIXEL and PIN_NEOPIXEL
Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUM_NEOPIXEL, PIN_NEOPIXEL, NEO_GRB + NEO_KHZ800);

// bongo cat frame
const unsigned char PROGMEM cat_frame0 [] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x02, 0x07, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE, 0xFC, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE, 0x7C, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x01, 0x80, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE, 0x3C, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0x18, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0x18, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x03, 0xE0, 0x00, 0x10, 0x00, 0x07, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x03, 0xC0, 0x00, 0x78, 0x00, 0x07, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x0F, 0x80, 0x7C, 0x00, 0x03, 0xFF, 0xFF, 0x80, 0xF3, 0xFF, 0xE1, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x0F, 0xF0, 0x7C, 0x00, 0x01, 0xFF, 0xFB, 0x80, 0xE7, 0xFF, 0xE0, 0x03, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0xF8, 0x78, 0x00, 0x00, 0xFF, 0xF8, 0xC0, 0xC7, 0xFF, 0xF0, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFC, 0x41, 0xCF, 0xFF, 0xFF, 0xC0, 0x00, 0x1C, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFC, 0x01, 0x8F, 0xFF, 0xFF, 0xFF, 0x80, 0x1C, 0x01, 0xFF, 0xFC, 0x00, 0x0C, 0x00, 0x00, 0x7F, 0xFC, 0x01, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0x9C, 0x0F, 0xFF, 0xFF, 0xF8, 0x1C, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xFC, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xE0, 0x3F, 0xFF, 0xFE, 0x00, 0x00, 0xF8, 0x01, 0xF8, 0x1F, 0xFF, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x3F, 0xFF, 0xFE, 0x00, 0x30, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0x00, 0xC0, 0x00, 0x7F, 0xFF, 0xFC, 0x38, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x7F, 0xC0, 0x08, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x01, 0xFF, 0xF8, 0xFF, 0xEF, 0xFF, 0xFF, 0xFC, 0x03, 0xFF, 0x18, 0x00, 0x00, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x0F, 0xFF, 0xFF, 0xF0, 0x01, 0x83, 0xFE, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 0x00, 0x0C, 0x00, 0x1F, 0xFF, 0xFF, 0xE7, 0xF3, 0x06, 0x07, 0xFE, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x0C, 0x00, 0x1F, 0xFF, 0xFF, 0xC0, 0x7F, 0xCC, 0x00, 0xC7, 0xFC, 0x00, 0x40, 0x01, 0xFF, 0xFF, 0xEC, 0x00, 0x1B, 0xFF, 0xFF, 0x00, 0xC1, 0xFF, 0xC1, 0x83, 0x0F, 0xFC, 0xC0, 0x08, 0x1F, 0xFF, 0xFE, 0x00, 0x18, 0x0F, 0xFE, 0x79, 0x81, 0x83, 0xFF, 0xC6, 0x03, 0x0F, 0xF8, 0x18, 0x5F, 0xFF, 0xFE, 0x00, 0x30, 0x07, 0xFF, 0x3F, 0xF7, 0x06, 0x03, 0xFF, 0x86, 0x08, 0x1F, 0xF8, 0xDF, 0xFF, 0xFE, 0x00, 0x3F, 0x87, 0xFF, 0x00, 0x3F, 0xFC, 0x01, 0x83, 0xFF, 0xB0, 0x01, 0xBF, 0x9F, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0xFF, 0x00, 0x00, 0x3F, 0xE3, 0x06, 0x03, 0xFF, 0x03, 0x03, 0x1F, 0xFF, 0xFF, 0x00, 0x3F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x7F, 0xEC, 0x06, 0x0F, 0xFF, 0x86, 0x3F, 0xFF, 0xFF, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x7F, 0xCC, 0x18, 0x07, 0xFC, 0x3F, 0xFF, 0xFF, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0xFF, 0xF0, 0x03, 0x0C, 0x7F, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0xFF, 0x82, 0x18, 0xFF, 0xFF, 0xFF, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x01, 0xFF, 0xB1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFC, 0x3F, 0xF0, 0x00, 0x07, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x0F, 0xE0, 0x7F, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x1C, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xC0, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xFF, 0xC0, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xCF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
const unsigned char PROGMEM cat_frame1 [] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE, 0xFC, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x01, 0x80, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE, 0x7C, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE, 0x3C, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0x18, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x03, 0xC0, 0x00, 0x30, 0x00, 0x07, 0xFF, 0xFF, 0x18, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x03, 0xC8, 0x00, 0x78, 0x00, 0x03, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x0F, 0x80, 0x7C, 0x00, 0x03, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x0F, 0xF0, 0x7C, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0xF3, 0xFF, 0xE1, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0xF0, 0x78, 0x00, 0x00, 0xFF, 0xFB, 0x80, 0xE7, 0xFF, 0xE0, 0x03, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF8, 0xC0, 0xC7, 0xFF, 0xF0, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFC, 0x41, 0xCF, 0xFF, 0xFF, 0xC0, 0x00, 0x1C, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFC, 0x01, 0x8F, 0xFF, 0xFF, 0xFF, 0x80, 0x1C, 0x01, 0xFF, 0xFC, 0x00, 0x0C, 0x00, 0x00, 0x7F, 0xFC, 0x01, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0x9C, 0x07, 0xFF, 0xFF, 0xF8, 0x0C, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xFC, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xE0, 0x3F, 0xFF, 0xFE, 0x00, 0x00, 0xF8, 0x01, 0xF8, 0x1F, 0xFF, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x3F, 0xFF, 0xFE, 0x00, 0x30, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0x00, 0x40, 0x00, 0x3F, 0xFF, 0xFC, 0x38, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x7F, 0xC0, 0x08, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x01, 0xFF, 0xF8, 0xFF, 0xEF, 0xFF, 0xFF, 0xFC, 0x03, 0xFF, 0x18, 0x00, 0x00, 0x7F, 0xFF, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x0F, 0xFF, 0xFF, 0xF0, 0x00, 0xC3, 0xFE, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 0x00, 0x0C, 0x00, 0x1F, 0xFF, 0xFF, 0xE7, 0xF3, 0x06, 0x07, 0xFE, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 0x0C, 0x00, 0x1F, 0xFF, 0xFF, 0xC0, 0x7F, 0xEC, 0x00, 0xC7, 0xFC, 0x00, 0x60, 0x01, 0xFF, 0xFF, 0xEC, 0x00, 0x1B, 0xFF, 0xFF, 0x00, 0x60, 0xFF, 0xC1, 0x83, 0x0F, 0xFE, 0xC0, 0x08, 0x1F, 0xFF, 0xFE, 0x00, 0x18, 0x0F, 0xFF, 0x79, 0x81, 0x83, 0xFF, 0xC6, 0x03, 0x0F, 0xFC, 0x18, 0x5F, 0xFF, 0xFE, 0x00, 0x30, 0x07, 0xFF, 0x1F, 0xF7, 0x06, 0x02, 0xFF, 0x86, 0x08, 0x1F, 0xF8, 0xDF, 0xFF, 0xFE, 0x00, 0x3F, 0x87, 0xFF, 0x00, 0x3F, 0xFC, 0x01, 0x83, 0xFF, 0xB0, 0x01, 0xBF, 0x9F, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0xFF, 0x00, 0x00, 0x3F, 0xF3, 0x06, 0x03, 0xFF, 0x03, 0x03, 0x1F, 0xFF, 0xFF, 0x00, 0x3F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x7F, 0xEC, 0x06, 0x0F, 0xFF, 0x82, 0x3F, 0xFF, 0xFF, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x7F, 0xEC, 0x18, 0x07, 0xFC, 0x3F, 0xFF, 0xFF, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0xFF, 0xF0, 0x03, 0x0C, 0x7F, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0xFF, 0x82, 0x18, 0xFF, 0xFF, 0xFF, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x18, 0x00, 0x01, 0xFF, 0xB1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x7F, 0xFC, 0x3F, 0xF0, 0x00, 0x05, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x0F, 0xE0, 0x7F, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x1C, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xC0, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xFF, 0xC0, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xCF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
const unsigned char PROGMEM cat_frame2 [] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x1F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xF8, 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xF8, 0x0F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFF, 0xF8, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE, 0xFC, 0x7F, 0xFF, 0xFF, 0xFF, 0x78, 0x1F, 0xF0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE, 0x7C, 0x7F, 0xFF, 0xFF, 0xFC, 0x38, 0x1F, 0xF0, 0x03, 0xC0, 0x00, 0x00, 0x3E, 0x03, 0xFF, 0xFE, 0x3C, 0x7F, 0xFF, 0xFF, 0xF8, 0x38, 0x3F, 0xE0, 0x07, 0xC0, 0x00, 0x00, 0x7F, 0x07, 0xFF, 0xFF, 0x18, 0x7F, 0xFF, 0xFF, 0xF8, 0x18, 0x3F, 0xC0, 0x03, 0xC0, 0x00, 0x30, 0xE7, 0x87, 0xFF, 0xFF, 0x18, 0x7F, 0xFF, 0xFF, 0xFC, 0x1C, 0x3F, 0x80, 0x03, 0xC8, 0x00, 0x78, 0xE3, 0xC7, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x0C, 0x7F, 0x00, 0x00, 0x0F, 0x80, 0x7D, 0xC1, 0xE3, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xDC, 0x7E, 0x00, 0x00, 0x0F, 0xF0, 0x7D, 0xC0, 0xE1, 0xFF, 0xFF, 0x80, 0xF3, 0xFF, 0xE1, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0xF0, 0x79, 0xC0, 0x71, 0xFF, 0xFB, 0x80, 0xE7, 0xFF, 0xE0, 0x03, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x70, 0xFF, 0xF8, 0xC0, 0xC7, 0xFF, 0xF0, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x38, 0x7F, 0xFC, 0x41, 0xCF, 0xFF, 0xFF, 0xC0, 0x00, 0x18, 0x00, 0x3F, 0x00, 0x00, 0x01, 0xC0, 0x38, 0x7F, 0xFC, 0x01, 0x8F, 0xFF, 0xFF, 0xFF, 0x80, 0x18, 0x01, 0xFF, 0xFE, 0x00, 0x01, 0xC0, 0x18, 0x7F, 0xFC, 0x01, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0x9C, 0x07, 0xFF, 0xFF, 0xFC, 0x01, 0xC0, 0x18, 0x3F, 0xFE, 0x00, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xFD, 0xC0, 0x18, 0x3F, 0xFE, 0x00, 0x1F, 0xFF, 0xFC, 0x01, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0xFC, 0x01, 0xE0, 0x3F, 0xFF, 0xFE, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 0x1F, 0xFF, 0x00, 0x3F, 0xFF, 0xFC, 0x03, 0xC0, 0x00, 0x3F, 0xFF, 0xFE, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x3F, 0xFF, 0xFC, 0x0F, 0x00, 0x40, 0x00, 0x3F, 0xFF, 0xFC, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x7E, 0x7F, 0xC0, 0x08, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x01, 0xFF, 0xF8, 0xFF, 0xEF, 0xFF, 0xFF, 0xFC, 0x03, 0xFF, 0x18, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0xFC, 0x00, 0x0F, 0xFF, 0xFF, 0xF0, 0x00, 0xC3, 0xFE, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 0x00, 0x0C, 0x00, 0x1F, 0xFF, 0xFF, 0xE7, 0xF3, 0x06, 0x07, 0xFE, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 0x0C, 0x00, 0x1F, 0xFF, 0xFF, 0xC0, 0x7F, 0xEC, 0x00, 0xC7, 0xFC, 0x00, 0x60, 0x01, 0xFF, 0xFF, 0xEC, 0x00, 0x1B, 0xFF, 0xFF, 0x00, 0x60, 0xFF, 0xC1, 0x83, 0x0F, 0xFE, 0xC0, 0x08, 0x1F, 0xFF, 0xFE, 0x00, 0x18, 0x0F, 0xFF, 0x79, 0x81, 0x83, 0xFF, 0xC6, 0x03, 0x0F, 0xFC, 0x18, 0x5F, 0xFF, 0xFE, 0x00, 0x30, 0x07, 0xFF, 0x1F, 0xF7, 0x06, 0x02, 0xFF, 0x86, 0x08, 0x1F, 0xF8, 0xDF, 0xFF, 0xFE, 0x00, 0x3F, 0x87, 0xFF, 0x00, 0x3F, 0xFC, 0x01, 0x83, 0xFF, 0xB0, 0x01, 0xBF, 0x9F, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0xFF, 0x00, 0x00, 0x3F, 0xE3, 0x06, 0x03, 0xFF, 0x03, 0x03, 0x1F, 0xFF, 0xFF, 0x00, 0x3F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x7F, 0xEC, 0x06, 0x0F, 0xFF, 0x82, 0x3F, 0xFF, 0xFF, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x7F, 0xCC, 0x18, 0x07, 0xFC, 0x3F, 0xFF, 0xFF, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0xFF, 0xF0, 0x03, 0x0C, 0x7F, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0xFF, 0x82, 0x18, 0xFF, 0xFF, 0xFF, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x18, 0x00, 0x01, 0xFF, 0xB1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x7F, 0xFC, 0x3F, 0xF0, 0x00, 0x05, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x0F, 0xE0, 0x7F, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x1C, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xC0, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xFF, 0xC0, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xCF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
const unsigned char PROGMEM cat_frame3 [] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE, 0xFC, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE, 0x7C, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFE, 0x3C, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0x18, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x03, 0xC0, 0x00, 0x30, 0x00, 0x07, 0xFF, 0xFF, 0x18, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x03, 0xC8, 0x00, 0x78, 0x00, 0x07, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x0F, 0x80, 0x7C, 0x00, 0x03, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x0F, 0xF0, 0x7C, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0xF3, 0xFF, 0xE1, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0xF0, 0x78, 0x00, 0x00, 0xFF, 0xFB, 0x80, 0xE7, 0xFF, 0xE0, 0x03, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF8, 0xC0, 0xC7, 0xFF, 0xF0, 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFC, 0x41, 0xCF, 0xFF, 0xFF, 0xC0, 0x00, 0x07, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFC, 0x01, 0x8F, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x7F, 0xFF, 0xFC, 0x00, 0x0C, 0x00, 0x00, 0x7F, 0xFC, 0x01, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x1F, 0xFF, 0xF8, 0x0C, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x7F, 0xFF, 0xFC, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xE0, 0x3F, 0xFF, 0xFE, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x1F, 0xFF, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x3F, 0xFF, 0xFE, 0x00, 0x30, 0x01, 0xFF, 0xFF, 0xFF, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0x00, 0x40, 0x00, 0x3F, 0xFF, 0xFC, 0x70, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x7F, 0xC0, 0x08, 0x00, 0x7F, 0xFF, 0xF0, 0x07, 0xC7, 0xFF, 0xF8, 0xFF, 0xEF, 0xFF, 0xFF, 0xFC, 0x03, 0xFF, 0x18, 0x00, 0x00, 0x7F, 0xF0, 0x1E, 0x00, 0x00, 0xFC, 0x00, 0x0F, 0xFF, 0xFF, 0xF0, 0x00, 0xC3, 0xFE, 0x00, 0x00, 0x00, 0xF8, 0x7F, 0xF0, 0x00, 0x0C, 0x00, 0x1F, 0xFF, 0xFF, 0xE7, 0xF3, 0x06, 0x07, 0xFE, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xF0, 0x0C, 0x00, 0x1F, 0xFF, 0xFF, 0xC0, 0x7F, 0xEC, 0x00, 0xC7, 0xFC, 0x00, 0x7F, 0xE1, 0xFF, 0xFF, 0xEC, 0x00, 0x1B, 0xFF, 0xFF, 0x00, 0x60, 0xFF, 0xC1, 0x83, 0x0F, 0xFE, 0xC0, 0x08, 0x1F, 0x3F, 0xFE, 0x00, 0x18, 0x0F, 0xFF, 0x79, 0x81, 0x83, 0xFF, 0xC6, 0x03, 0x0F, 0xFC, 0x18, 0x5F, 0x01, 0xFE, 0x00, 0x30, 0x07, 0xFF, 0x1F, 0xF7, 0x06, 0x02, 0xFF, 0x86, 0x08, 0x1F, 0xF8, 0xDF, 0x80, 0x0E, 0x00, 0x3F, 0x87, 0xFF, 0x00, 0x3F, 0xFC, 0x01, 0x83, 0xFF, 0xB0, 0x01, 0xBF, 0x9D, 0xC0, 0x06, 0x00, 0x3F, 0xFF, 0xFF, 0x00, 0x00, 0x3F, 0xE3, 0x06, 0x03, 0xFF, 0x03, 0x03, 0x1C, 0xF0, 0x07, 0x00, 0x3F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x7F, 0xEC, 0x06, 0x0F, 0xFF, 0x82, 0x3C, 0x78, 0x0F, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x7F, 0xCC, 0x18, 0x07, 0xFC, 0x38, 0x7C, 0x0F, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0xFF, 0xF0, 0x03, 0x0C, 0x78, 0x3E, 0x1F, 0x80, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0xFF, 0x82, 0x18, 0xF8, 0x1F, 0x1F, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x18, 0x00, 0x01, 0xFF, 0xB1, 0xF0, 0x0F, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x7F, 0xFC, 0x3F, 0xF0, 0x00, 0x05, 0xE1, 0xF0, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x0F, 0xE0, 0x7F, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x1C, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xC0, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xFF, 0xC0, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xCF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
const unsigned char PROGMEM cat_frame4 [] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFE, 0xFC, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x01, 0x80, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFE, 0x7C, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFE, 0x3C, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0x18, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x03, 0xC0, 0x00, 0x30, 0x00, 0x07, 0xFF, 0xFF, 0x18, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x03, 0xC8, 0x00, 0x78, 0x00, 0x03, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x09, 0x80, 0x7C, 0x00, 0x03, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x0F, 0xC4, 0x7C, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0xF3, 0xFF, 0xE1, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0xFC, 0x78, 0x00, 0x00, 0xFF, 0xFB, 0x80, 0xE7, 0xFF, 0xE0, 0x03, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0xFF, 0xF8, 0xC0, 0xC7, 0xFF, 0xF0, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFC, 0x41, 0xCF, 0xFF, 0xFF, 0xC0, 0x00, 0x1C, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFC, 0x01, 0x8F, 0xFF, 0xFF, 0xFF, 0x80, 0x1C, 0x01, 0xFF, 0xFC, 0x00, 0x0C, 0x00, 0x00, 0x7F, 0xFC, 0x01, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0x9C, 0x07, 0xFF, 0xFF, 0xF8, 0x0C, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xFC, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xE0, 0x3F, 0xFF, 0xFE, 0x00, 0x00, 0xF8, 0x01, 0xF8, 0x1F, 0xFF, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x3F, 0xFF, 0xFE, 0x00, 0x30, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0x00, 0x40, 0x00, 0x3F, 0xFF, 0xFC, 0x38, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x7F, 0xC0, 0x08, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x01, 0xFF, 0xF8, 0xFF, 0xEF, 0xFF, 0xFF, 0xFC, 0x03, 0xFF, 0x18, 0x00, 0x00, 0x7F, 0xFF, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x0F, 0xFF, 0xFF, 0xF0, 0x00, 0xC3, 0xFE, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 0x00, 0x0C, 0x00, 0x1F, 0xFF, 0xFF, 0xE7, 0xF3, 0x06, 0x07, 0xFE, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 0x0C, 0x00, 0x1F, 0xFF, 0xFF, 0xC0, 0x7F, 0xEC, 0x00, 0xC7, 0xFC, 0x00, 0x60, 0x01, 0xFF, 0xFF, 0xEC, 0x00, 0x1B, 0xFF, 0xFF, 0x00, 0x60, 0xFF, 0xC1, 0x83, 0x0F, 0xFC, 0xC0, 0x08, 0x1F, 0xFF, 0xFE, 0x00, 0x18, 0x0F, 0xFF, 0x79, 0x81, 0x83, 0xFF, 0xC6, 0x03, 0x0F, 0xF8, 0x18, 0x5F, 0xFF, 0xFE, 0x00, 0x30, 0x07, 0xFF, 0x1F, 0xF7, 0x06, 0x03, 0xFF, 0x86, 0x08, 0x1F, 0xF8, 0xDF, 0xFF, 0xFE, 0x00, 0x3F, 0x87, 0xFF, 0x00, 0x3F, 0xFC, 0x01, 0x83, 0xFF, 0xB0, 0x01, 0xBF, 0x9F, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0xFF, 0x00, 0x00, 0x3F, 0xE3, 0x06, 0x03, 0xFF, 0x03, 0x03, 0x1F, 0xFF, 0xFF, 0x00, 0x3F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x7F, 0xEC, 0x06, 0x0F, 0xFF, 0x82, 0x3F, 0xFF, 0xFF, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x7F, 0xCC, 0x18, 0x07, 0xFC, 0x3F, 0xFF, 0xFF, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0xFF, 0xF0, 0x03, 0x0C, 0x7F, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0xFF, 0x82, 0x18, 0xFF, 0xFF, 0xFF, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x18, 0x00, 0x01, 0xFF, 0xB1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xFF, 0xFC, 0x3F, 0xF0, 0x00, 0x05, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x0F, 0xE0, 0x7F, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x10, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xC0, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xFF, 0x80, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xCF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xFF, 0xFC, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};

// keyboard layout
int layout[16] = {0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0x85, 0xEA, 0xB2, 0xDF, 0xDE, 0xDD, 0xDC};

void setup() {

  Serial.begin(115200);
  //while (!Serial) { delay(10); }     // wait till serial port is opened
  Keyboard.begin();
  delay(100);  // RP2040 delay is not a bad idea

  // start pixels!
  pixels.begin();
  pixels.setBrightness(255);
  pixels.show(); // Initialize all pixels to 'off'

  // set all mechanical keys to inputs
  for (uint8_t i=0; i<=12; ++i) 
    pinMode(i, INPUT_PULLUP);

  // Start i2c connect of Adafruit neokey 1x4
  neokey.begin(0x30);

  // set up neokey pixel
  for (uint16_t i=0; i<neokey.pixels.numPixels(); ++i) {
    neokey.pixels.setPixelColor(i, Wheel(map(i, 0, neokey.pixels.numPixels(), 0, 255)));
    neokey.pixels.show();
    delay(50);
  }
  for (uint16_t i=0; i<neokey.pixels.numPixels(); ++i) {
    neokey.pixels.setPixelColor(i, 0x000000);
    neokey.pixels.show();
    delay(150);
  }

}

// global var to control RGB neopixel led
uint8_t j = 0;
  
void loop() {
  // macropad key press and release act as keyboard key
  Keyboard.begin();
  for (int i=1; i<=12; i++) {
    if (!digitalRead(i) ) {
      Keyboard.press(layout[i-1]);
      if(i == 1 || i == 4 || i == 7 || i == 10)
        rp2040.fifo.push_nb(1);   // push data to other core
      else
        rp2040.fifo.push_nb(2);          
    } else {
      Keyboard.release(layout[i-1]);
    }
  }

  // neokey press and release act as keyboard key
  uint8_t buttons = neokey.read();
  if (buttons & (1<<0)) {
    Keyboard.press(layout[12]);
    rp2040.fifo.push_nb(1); 
  }   
  else
    Keyboard.release(layout[12]);  
  if (buttons & (1<<1)) {
    Keyboard.press(layout[13]);
    rp2040.fifo.push_nb(1);
  }
  else
    Keyboard.release(layout[13]); 
  if (buttons & (1<<2)) {
    Keyboard.press(layout[14]);
    rp2040.fifo.push_nb(1);
  }
  else
    Keyboard.release(layout[14]); 
  if (buttons & (1<<3)) {
    Keyboard.press(layout[15]);
    rp2040.fifo.push_nb(1);
  }
  else
    Keyboard.release(layout[15]);      
      
  // RGB efffect of macropad neopixel nad neokey neopixel
  for(int i=0; i< pixels.numPixels(); ++i) 
    pixels.setPixelColor(i, Wheel(((i * 256 / pixels.numPixels()) + j) & 255));
  for (int i=neokey.pixels.numPixels()-1; i >= 0; --i) 
    neokey.pixels.setPixelColor(i, Wheel(((i * 256 / neokey.pixels.numPixels()) + j+3) & 255));      
            
  // show neopixels, incredment swirl
  neokey.pixels.show();
  pixels.show();
  j++;

}

// Input a value 0 to 255 to get a color value.
// The colours are a transition r - g - b - back to r.
uint32_t Wheel(byte WheelPos) {
  if(WheelPos < 85) 
    return pixels.Color(255 - WheelPos * 3, 0, WheelPos * 3);
  else if(WheelPos < 170) {
    WheelPos -= 85;
    return pixels.Color(0, WheelPos * 3, 255 - WheelPos * 3);
  } else {
    WheelPos -= 170;
    return pixels.Color(WheelPos * 3, 255 - WheelPos * 3, 0);
  }
}

// core 1: Process images to output to oled display
int oled_state = 1; // state of the oled display
int millisecond = 0; // counter to display oled

void setup1() {
  Serial.begin(115200);
  delay(100);  
  
  // Start OLED
  display.begin(0, true); // we dont use the i2c address but we will reset!
  display.display();
  display.invertDisplay(true);
  display.drawBitmap(0, 0,cat_frame0,128,64, 1);
  display.display();
}

void loop1() {
  uint32_t dest = 0;
  // read data from other core (keyboard state)
  if(rp2040.fifo.pop_nb(&dest)) {
    delay(50);
    rp2040.fifo.clear();
  } 
  bongo_cat(dest);
}

// process bongo cat gif
void bongo_cat(uint32_t clap) {
  if(clap == 0) {
    if(oled_state == 3 && millisecond >= 100000) {
      display.clearDisplay();
      display.drawBitmap(0, 0,cat_frame0,128,64, 1);
      display.display();
      oled_state = 1;
      millisecond = 0;
    }
    if(oled_state == 1 && millisecond >= 100000) {
      display.clearDisplay();
      display.drawBitmap(0, 0,cat_frame1,128,64, 1);
      display.display();
      oled_state = 2;
      millisecond = 0;
    }  
    if(oled_state == 2 && millisecond >= 100000)  {
      display.clearDisplay();
      display.drawBitmap(0, 0,cat_frame4,128,64, 1);
      display.display();
      oled_state = 3;
      millisecond = 0;
    }    
  }
  else {
    millisecond = 70000;
    if (clap == 1)   {
      display.drawBitmap(0, 0,cat_frame2,128,64, 1);
      display.display();  
    } 
    else if (clap == 2)   {
      display.drawBitmap(0, 0,cat_frame3,128,64, 1);
      display.display();  
    } 
    display.clearDisplay();
  } 
  millisecond++;
}
